[{"F:\\HTML\\React\\react-router\\src\\index.js":"1","F:\\HTML\\React\\react-router\\src\\App.js":"2","F:\\HTML\\React\\react-router\\src\\pages\\Welcome.js":"3","F:\\HTML\\React\\react-router\\src\\pages\\Products.js":"4","F:\\HTML\\React\\react-router\\src\\components\\MainHeader.js":"5","F:\\HTML\\React\\react-router\\src\\pages\\ProductDetail.js":"6","F:\\HTML\\React\\react-router\\src\\pages\\AllQuotes.js":"7","F:\\HTML\\React\\react-router\\src\\pages\\QuoteDetail.js":"8","F:\\HTML\\React\\react-router\\src\\pages\\NewQuote.js":"9","F:\\HTML\\React\\react-router\\src\\components\\comments\\Comments.js":"10","F:\\HTML\\React\\react-router\\src\\components\\comments\\NewCommentForm.js":"11","F:\\HTML\\React\\react-router\\src\\components\\layout\\Layout.js":"12","F:\\HTML\\React\\react-router\\src\\components\\layout\\MainNavigation.js":"13","F:\\HTML\\React\\react-router\\src\\components\\quotes\\QuoteList.js":"14","F:\\HTML\\React\\react-router\\src\\components\\quotes\\QuoteItem.js":"15","F:\\HTML\\React\\react-router\\src\\components\\quotes\\QuoteForm.js":"16","F:\\HTML\\React\\react-router\\src\\components\\UI\\Card.js":"17","F:\\HTML\\React\\react-router\\src\\components\\UI\\LoadingSpinner.js":"18","F:\\HTML\\React\\react-router\\src\\components\\quotes\\HighlightedQuote.js":"19","F:\\HTML\\React\\react-router\\src\\pages\\NotFound.js":"20","F:\\HTML\\React\\react-router\\src\\hooks\\use-http.js":"21","F:\\HTML\\React\\react-router\\src\\lib\\api.js":"22","F:\\HTML\\React\\react-router\\src\\components\\quotes\\NoQuotesFound.js":"23","F:\\HTML\\React\\react-router\\src\\components\\comments\\CommentsList.js":"24","F:\\HTML\\React\\react-router\\src\\components\\comments\\CommentItem.js":"25"},{"size":223,"mtime":1624805042883,"results":"26","hashOfConfig":"27"},{"size":1334,"mtime":1625082564152,"results":"28","hashOfConfig":"27"},{"size":310,"mtime":1624800339986,"results":"29","hashOfConfig":"27"},{"size":442,"mtime":1624799670294,"results":"30","hashOfConfig":"27"},{"size":535,"mtime":1624798718555,"results":"31","hashOfConfig":"27"},{"size":352,"mtime":1624799763889,"results":"32","hashOfConfig":"27"},{"size":1278,"mtime":1624903783906,"results":"33","hashOfConfig":"27"},{"size":2177,"mtime":1624904831012,"results":"34","hashOfConfig":"27"},{"size":831,"mtime":1624902156666,"results":"35","hashOfConfig":"27"},{"size":1664,"mtime":1624908810577,"results":"36","hashOfConfig":"27"},{"size":1485,"mtime":1624909275163,"results":"37","hashOfConfig":"27"},{"size":349,"mtime":1624818265044,"results":"38","hashOfConfig":"27"},{"size":735,"mtime":1624817972486,"results":"39","hashOfConfig":"27"},{"size":1541,"mtime":1624884623507,"results":"40","hashOfConfig":"27"},{"size":455,"mtime":1624820745491,"results":"41","hashOfConfig":"27"},{"size":1839,"mtime":1625731357354,"results":"42","hashOfConfig":"27"},{"size":156,"mtime":1616596573000,"results":"43","hashOfConfig":"27"},{"size":167,"mtime":1616596573000,"results":"44","hashOfConfig":"27"},{"size":270,"mtime":1616596573000,"results":"45","hashOfConfig":"27"},{"size":165,"mtime":1624821636092,"results":"46","hashOfConfig":"27"},{"size":1212,"mtime":1616590605000,"results":"47","hashOfConfig":"27"},{"size":2183,"mtime":1625085807073,"results":"48","hashOfConfig":"27"},{"size":331,"mtime":1624903942189,"results":"49","hashOfConfig":"27"},{"size":334,"mtime":1616596573000,"results":"50","hashOfConfig":"27"},{"size":200,"mtime":1616596573000,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"k7obvc",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"54"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"54"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"F:\\HTML\\React\\react-router\\src\\index.js",[],["107","108"],"F:\\HTML\\React\\react-router\\src\\App.js",[],"F:\\HTML\\React\\react-router\\src\\pages\\Welcome.js",[],"F:\\HTML\\React\\react-router\\src\\pages\\Products.js",[],"F:\\HTML\\React\\react-router\\src\\components\\MainHeader.js",[],"F:\\HTML\\React\\react-router\\src\\pages\\ProductDetail.js",[],"F:\\HTML\\React\\react-router\\src\\pages\\AllQuotes.js",[],"F:\\HTML\\React\\react-router\\src\\pages\\QuoteDetail.js",[],"F:\\HTML\\React\\react-router\\src\\pages\\NewQuote.js",["109","110"],"import { useEffect } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport QuoteForm from '../components/quotes/QuoteForm';\r\nimport useHttp from '../hooks/use-http';\r\nimport { addQuote } from '../lib/api';\r\n\r\nconst NewQuote = () => {\r\n    const history = useHistory();\r\n\r\n    const {\r\n        sendRequest,\r\n        status,\r\n        data,\r\n        error\r\n    } = useHttp(addQuote);\r\n\r\n    useEffect(() => {\r\n        if (status === 'completed') {\r\n            history.push('/quotes');\r\n        }\r\n    }, [status, history]);\r\n\r\n    const addQuoteHandler = quoteData => {\r\n        console.log(quoteData);\r\n        sendRequest(quoteData);\r\n        // history.push('/quotes');\r\n    };\r\n\r\n    return (\r\n        <QuoteForm isLoading={status === 'pending'} onAddQuote={addQuoteHandler} />\r\n    );\r\n};\r\n\r\nexport default NewQuote;","F:\\HTML\\React\\react-router\\src\\components\\comments\\Comments.js",["111"],"import { useState, useEffect, useCallback } from 'react';\nimport { useParams } from 'react-router-dom';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\nimport useHttp from '../../hooks/use-http';\nimport { getAllComments } from '../../lib/api';\nimport CommentsList from '../comments/CommentsList';\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n  const { sendRequest, status, data, error } = useHttp(getAllComments);\n\n  const { quoteId } = params;\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId])\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const addedCommentHandler = useCallback(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  let comments;\n  if (status === 'pending') {\n    comments = <div className=\"centered\"><LoadingSpinner /></div>;\n  }\n  if (status === 'completed' && (data && data.length > 0)) {\n    comments = <CommentsList comments={data} />;\n  }\n  if (status === 'completed' && (!data || data.length === 0)) {\n    comments = <p className='centered'>No comments were added yet!</p>;\n  }\n  console.log(data);\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className='btn' onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && <NewCommentForm quoteId={quoteId} onAddedComment={addedCommentHandler} />}\n      {comments}\n    </section>\n  );\n};\n\nexport default Comments;\n","F:\\HTML\\React\\react-router\\src\\components\\comments\\NewCommentForm.js",["112","113"],"import { useRef, useEffect } from 'react';\nimport useHttp from '../../hooks/use-http';\nimport { addComment } from '../../lib/api';\nimport { useParams } from 'react-router-dom';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './NewCommentForm.module.css';\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n  const { sendRequest, status, data, error } = useHttp(addComment);\n  const params = useParams();\n\n  const { onAddedComment } = props;\n  useEffect(() => {\n    if (status === 'completed' && !error) {\n      onAddedComment();\n    }\n  }, [status, error, onAddedComment]);\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n\n    // optional: Could validate here\n\n    // send comment to server\n    const comment = commentTextRef.current.value;\n    sendRequest({\n      // quoteId: params.quoteId,\n      quoteId: props.quoteId,\n      commentData: { text: comment }\n    });\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      {status === 'pending' && (\n        <div className=\"centered\"><LoadingSpinner /></div>\n      )}\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor='comment'>Your Comment</label>\n        <textarea id='comment' rows='5' ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className='btn'>Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","F:\\HTML\\React\\react-router\\src\\components\\layout\\Layout.js",[],"F:\\HTML\\React\\react-router\\src\\components\\layout\\MainNavigation.js",[],"F:\\HTML\\React\\react-router\\src\\components\\quotes\\QuoteList.js",["114"],"import { useState, Fragment } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\n\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\n\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\n\nconst QuoteList = (props) => {\n  const history = useHistory();\n  const location = useLocation();\n\n  const searchParams = new URLSearchParams(location.search);\n  const isSortingAscending = searchParams.get('sort') === 'asc';\n\n  const changeSortingHandler = () => {\n    // history.push('/quotes?sort=' + (isSortingAscending ? 'desc' : 'asc'));\n    // history.push(`${location.pathname}?sort=${(isSortingAscending ? 'desc' : 'asc')}`);\n    history.push({\n      pathname: location.pathname,\n      search: `?sort=${(isSortingAscending ? 'desc' : 'asc')}`\n    });\n  };\n\n  const sortedQuotes = sortQuotes(props.quotes, isSortingAscending);\n\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={changeSortingHandler}>Sort {isSortingAscending ? 'Descending' : 'Ascending'}</button>\n      </div>\n      <ul className={classes.list}>\n        {sortedQuotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","F:\\HTML\\React\\react-router\\src\\components\\quotes\\QuoteItem.js",[],"F:\\HTML\\React\\react-router\\src\\components\\quotes\\QuoteForm.js",[],"F:\\HTML\\React\\react-router\\src\\components\\UI\\Card.js",[],"F:\\HTML\\React\\react-router\\src\\components\\UI\\LoadingSpinner.js",[],"F:\\HTML\\React\\react-router\\src\\components\\quotes\\HighlightedQuote.js",[],"F:\\HTML\\React\\react-router\\src\\pages\\NotFound.js",[],"F:\\HTML\\React\\react-router\\src\\hooks\\use-http.js",[],"F:\\HTML\\React\\react-router\\src\\lib\\api.js",[],"F:\\HTML\\React\\react-router\\src\\components\\quotes\\NoQuotesFound.js",[],"F:\\HTML\\React\\react-router\\src\\components\\comments\\CommentsList.js",[],"F:\\HTML\\React\\react-router\\src\\components\\comments\\CommentItem.js",[],{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","severity":1,"message":"120","line":13,"column":9,"nodeType":"121","messageId":"122","endLine":13,"endColumn":13},{"ruleId":"119","severity":1,"message":"123","line":14,"column":9,"nodeType":"121","messageId":"122","endLine":14,"endColumn":14},{"ruleId":"119","severity":1,"message":"123","line":13,"column":38,"nodeType":"121","messageId":"122","endLine":13,"endColumn":43},{"ruleId":"119","severity":1,"message":"120","line":10,"column":32,"nodeType":"121","messageId":"122","endLine":10,"endColumn":36},{"ruleId":"119","severity":1,"message":"124","line":11,"column":9,"nodeType":"121","messageId":"122","endLine":11,"endColumn":15},{"ruleId":"119","severity":1,"message":"125","line":1,"column":10,"nodeType":"121","messageId":"122","endLine":1,"endColumn":18},"no-native-reassign",["126"],"no-negated-in-lhs",["127"],"no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","'params' is assigned a value but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]